{"ast":null,"code":"var _jsxFileName = \"/Users/krizchellewong/Desktop/3rdYear/Scire-Landing-Page/scire-tech/src/js/Main.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: 'If you wash your face and don?t apply any products, how does your skin behave 30 minutes after?',\n  options: ['It feels dry', 'It feels calm, smooth, and soft', 'It feels uneven (oily in some parts and dry on the other parts)', 'It feels shiny and oily\"']\n}, {\n  question: 'What is the largest planet in our solar system?',\n  options: ['Jupiter', 'Saturn', 'Neptune', 'Uranus'],\n  answer: 'Jupiter'\n}, {\n  question: 'What is the highest mountain in the world?',\n  options: ['Mount Everest', 'K2', 'Kangchenjunga', 'Lhotse'],\n  answer: 'Mount Everest'\n}];\nfunction Test() {\n  const handleAnswer = answer => {\n    if (answer === questions[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n    setCurrentQuestion(currentQuestion + 1);\n  };\n  const handleStartTest = () => {\n    setShowTest(true);\n  };\n\n  /* Landing Page, before the test starts */\n\n  if (!showTest) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartTest,\n        children: \"Start Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n  if (currentQuestion >= questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Want to save your result? We'll gladly email you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n  const {\n    question,\n    options\n  } = questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(option),\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","questions","question","options","answer","Test","handleAnswer","currentQuestion","setScore","score","setCurrentQuestion","handleStartTest","setShowTest","showTest","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","option","_c","$RefreshReg$"],"sources":["/Users/krizchellewong/Desktop/3rdYear/Scire-Landing-Page/scire-tech/src/js/Main.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst questions = [\n  {\n    question: 'If you wash your face and don?t apply any products, how does your skin behave 30 minutes after?',\n    options: ['It feels dry', 'It feels calm, smooth, and soft', 'It feels uneven (oily in some parts and dry on the other parts)', 'It feels shiny and oily\"'],\n  },\n  {\n    question: 'What is the largest planet in our solar system?',\n    options: ['Jupiter', 'Saturn', 'Neptune', 'Uranus'],\n    answer: 'Jupiter'\n  },\n  {\n    question: 'What is the highest mountain in the world?',\n    options: ['Mount Everest', 'K2', 'Kangchenjunga', 'Lhotse'],\n    answer: 'Mount Everest'\n  }\n];\n\nfunction Test() {\n\n\n  const handleAnswer = (answer) => {\n    if (answer === questions[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n    setCurrentQuestion(currentQuestion + 1);\n  };\n\n  const handleStartTest = () => {\n    setShowTest(true);\n  };\n\n  /* Landing Page, before the test starts */\n\n  if (!showTest) {\n    return (\n      <div>\n        <button onClick={handleStartTest}>Start Test</button>\n      </div>\n    );\n  }\n\n  \n\n  if (currentQuestion >= questions.length) {\n    return (\n      <div>\n        <h2>Want to save your result? We'll gladly email you</h2>\n      </div>\n    );\n  }\n\n  const { question, options } = questions[currentQuestion];\n\n  return (\n    <div>\n      <h2>{question}</h2>\n      <ul>\n        {options.map((option) => (\n          <li key={option}>\n            <button onClick={() => handleAnswer(option)}>{option}</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Test;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAG,CAChB;EACEC,QAAQ,EAAE,iGAAiG;EAC3GC,OAAO,EAAE,CAAC,cAAc,EAAE,iCAAiC,EAAE,iEAAiE,EAAE,0BAA0B;AAC5J,CAAC,EACD;EACED,QAAQ,EAAE,iDAAiD;EAC3DC,OAAO,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC;EACnDC,MAAM,EAAE;AACV,CAAC,EACD;EACEF,QAAQ,EAAE,4CAA4C;EACtDC,OAAO,EAAE,CAAC,eAAe,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,CAAC;EAC3DC,MAAM,EAAE;AACV,CAAC,CACF;AAED,SAASC,IAAIA,CAAA,EAAG;EAGd,MAAMC,YAAY,GAAIF,MAAM,IAAK;IAC/B,IAAIA,MAAM,KAAKH,SAAS,CAACM,eAAe,CAAC,CAACH,MAAM,EAAE;MAChDI,QAAQ,CAACC,KAAK,GAAG,CAAC,CAAC;IACrB;IACAC,kBAAkB,CAACH,eAAe,GAAG,CAAC,CAAC;EACzC,CAAC;EAED,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5BC,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;;EAED;;EAEA,IAAI,CAACC,QAAQ,EAAE;IACb,oBACEb,OAAA;MAAAc,QAAA,eACEd,OAAA;QAAQe,OAAO,EAAEJ,eAAgB;QAAAG,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAEV;EAIA,IAAIZ,eAAe,IAAIN,SAAS,CAACmB,MAAM,EAAE;IACvC,oBACEpB,OAAA;MAAAc,QAAA,eACEd,OAAA;QAAAc,QAAA,EAAI;MAAgD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAEV;EAEA,MAAM;IAAEjB,QAAQ;IAAEC;EAAQ,CAAC,GAAGF,SAAS,CAACM,eAAe,CAAC;EAExD,oBACEP,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAKZ;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBnB,OAAA;MAAAc,QAAA,EACGX,OAAO,CAACkB,GAAG,CAAEC,MAAM,iBAClBtB,OAAA;QAAAc,QAAA,eACEd,OAAA;UAAQe,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACgB,MAAM,CAAE;UAAAR,QAAA,EAAEQ;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC,GADvDG,MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACI,EAAA,GAhDQlB,IAAI;AAkDb,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}