{"ast":null,"code":"var _jsxFileName = \"/Users/krizchellewong/Desktop/3rdYear/Scire-Landing-Page/src/js/Main.js\",\n  _s = $RefreshSig$();\nimport { Button, ThemeProvider } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport theme from \"./theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"If you wash your face and don't apply any products, how does your skin behave 30 minutes after?\",\n  options: [\"It feels dry\", \"It feels calm, smooth, and soft\", \"It feels uneven (oily in some parts and dry on the other parts)\", 'It feels shiny and oily\"']\n}, {\n  question: \"What does your skin typically look like at the end of the day?\",\n  options: [\"My forehead and nose are very shiny and oily but my cheeks are matte.\", \"Crazy oily.\", \"Dull and tired. It feels mostly dry.\", \"It looks normal. Not overly dry or oily.\"]\n}];\nfunction Test() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showTest, setShowTest] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [answers, setAnswers] = useState([]);\n  const handleAnswer = answer => {\n    setAnswers([...answers, answer]);\n    setCurrentQuestion(currentQuestion + 1);\n  };\n  const handleStartTest = () => {\n    setShowTest(true);\n  };\n  const processAnswers = answers => {\n    const processAnswers = answers => {\n      const correctAnswers = answers.filter((answer, index) => {\n        return answer === questions[index].answer;\n      });\n      return correctAnswers.length;\n    };\n  };\n\n  // When email form is submitted\n  const handleEmailSubmit = event => {\n    event.preventDefault();\n    console.log(email);\n  };\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  // Landing page shown before the test starts\n  if (!showTest) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row justify-center\",\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartTest,\n          children: \"Start Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render the current question and options\n  const {\n    question,\n    options\n  } = questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(option),\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), currentQuestion >= questions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Want to save your result? We'll gladly email you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEmailSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: handleEmailChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Results: \", processAnswers(answers)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"dwBSFGngtB+2dBjv0MKqIMJy+cc=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["Button","ThemeProvider","React","useState","theme","jsxDEV","_jsxDEV","questions","question","options","Test","_s","currentQuestion","setCurrentQuestion","showTest","setShowTest","email","setEmail","answers","setAnswers","handleAnswer","answer","handleStartTest","processAnswers","correctAnswers","filter","index","length","handleEmailSubmit","event","preventDefault","console","log","handleEmailChange","target","value","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","option","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/krizchellewong/Desktop/3rdYear/Scire-Landing-Page/src/js/Main.js"],"sourcesContent":["import { Button, ThemeProvider } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport theme from \"./theme\";\n\nconst questions = [\n  {\n    question:\n      \"If you wash your face and don't apply any products, how does your skin behave 30 minutes after?\",\n    options: [\n      \"It feels dry\",\n      \"It feels calm, smooth, and soft\",\n      \"It feels uneven (oily in some parts and dry on the other parts)\",\n      'It feels shiny and oily\"',\n    ],\n  },\n  {\n    question: \"What does your skin typically look like at the end of the day?\",\n    options: [\n      \"My forehead and nose are very shiny and oily but my cheeks are matte.\",\n      \"Crazy oily.\",\n      \"Dull and tired. It feels mostly dry.\",\n      \"It looks normal. Not overly dry or oily.\",\n    ],\n  },\n];\n\nfunction Test() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showTest, setShowTest] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [answers, setAnswers] = useState([]);\n\n  const handleAnswer = (answer) => {\n    setAnswers([...answers, answer]);\n    setCurrentQuestion(currentQuestion + 1);\n  };\n\n  const handleStartTest = () => {\n    setShowTest(true);\n  };\n\n  const processAnswers = (answers) => {\n    const processAnswers = (answers) => {\n      const correctAnswers = answers.filter((answer, index) => {\n        return answer === questions[index].answer;\n      });\n      return correctAnswers.length;\n    };\n  };\n\n  // When email form is submitted\n  const handleEmailSubmit = (event) => {\n    event.preventDefault();\n    console.log(email);\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n\n  // Landing page shown before the test starts\n  if (!showTest) {\n    return (\n      <div className=\"flex flex-row justify-center\">\n        <ThemeProvider theme={theme}>\n          <button onClick={handleStartTest}>Start Test</button>\n        </ThemeProvider>\n      </div>\n    );\n  }\n\n  // Render the current question and options\n  const { question, options } = questions[currentQuestion];\n\n  return (\n    <div>\n      <h2>{question}</h2>\n      <ul>\n        {options.map((option) => (\n          <li key={option}>\n            <button onClick={() => handleAnswer(option)}>{option}</button>\n          </li>\n        ))}\n      </ul>\n\n      {/* Insert Results */}\n      {currentQuestion >= questions.length && (\n        <div>\n          <h2>Want to save your result? We'll gladly email you</h2>\n          <form onSubmit={handleEmailSubmit}>\n            <label>\n              Email:\n              <input type=\"email\" value={email} onChange={handleEmailChange} />\n            </label>\n            <button type=\"submit\">Submit</button>\n          </form>\n          <p>Results: {processAnswers(answers)}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Test;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}