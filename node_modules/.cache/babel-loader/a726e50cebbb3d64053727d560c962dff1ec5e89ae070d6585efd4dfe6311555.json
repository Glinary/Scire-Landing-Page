{"ast":null,"code":"var _jsxFileName = \"/Users/krizchellewong/Desktop/3rdYear/Scire-Landing-Page/src/js/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: 'If you wash your face and don?t apply any products, how does your skin behave 30 minutes after?',\n  options: ['It feels dry', 'It feels calm, smooth, and soft', 'It feels uneven (oily in some parts and dry on the other parts)', 'It feels shiny and oily\"']\n}, {\n  question: 'What does your skin typically look like at the end of the day?',\n  options: ['My forehead and nose are very shiny and oily but my cheeks are matte.', 'Crazy oily.', 'Dull and tired. It feels mostly dry.', 'It looks normal. Not overly dry or oily.']\n}];\nfunction Test() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showTest, setShowTest] = useState(false);\n  const [email, setEmail] = useState('');\n  const handleAnswer = answer => {\n    setCurrentQuestion(currentQuestion + 1);\n  };\n  const handleStartTest = () => {\n    setShowTest(true);\n  };\n\n  // Landing page shown before the test starts\n  if (!showTest) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartTest,\n        children: \"Start Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n  // When email form is submitted\n  const handleEmailSubmit = event => {\n    event.preventDefault();\n    console.log(email);\n  };\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  // When all questions have been asked\n  if (currentQuestion >= questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Want to save your result? We'll gladly email you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEmailSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: handleEmailChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  const {\n    question,\n    options\n  } = questions[currentQuestion];\n\n  // Display questions\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(option),\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"y5GxGaj6V7JO0exRJriXppgu04Y=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","questions","question","options","Test","_s","currentQuestion","setCurrentQuestion","showTest","setShowTest","email","setEmail","handleAnswer","answer","handleStartTest","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","handleEmailSubmit","event","preventDefault","console","log","handleEmailChange","target","value","length","onSubmit","type","onChange","map","option","_c","$RefreshReg$"],"sources":["/Users/krizchellewong/Desktop/3rdYear/Scire-Landing-Page/src/js/Main.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst questions = [\n  {\n    question: 'If you wash your face and don?t apply any products, how does your skin behave 30 minutes after?',\n    options: ['It feels dry', 'It feels calm, smooth, and soft', 'It feels uneven (oily in some parts and dry on the other parts)', 'It feels shiny and oily\"'],\n  },\n  {\n    question: 'What does your skin typically look like at the end of the day?',\n    options: ['My forehead and nose are very shiny and oily but my cheeks are matte.', 'Crazy oily.', 'Dull and tired. It feels mostly dry.', 'It looks normal. Not overly dry or oily.'],\n  },\n];\n\nfunction Test() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showTest, setShowTest] = useState(false);\n  const [email, setEmail] = useState('');\n\n\n  const handleAnswer = (answer) => {\n    setCurrentQuestion(currentQuestion + 1);\n  };\n\n  const handleStartTest = () => {\n    setShowTest(true);\n  };\n\n  // Landing page shown before the test starts\n  if (!showTest) {\n    return (\n      <div>\n        <button onClick={handleStartTest}>Start Test</button>\n      </div>\n    );\n  }\n\n  // When email form is submitted\n  const handleEmailSubmit = (event) => {\n    event.preventDefault();\n    console.log(email);\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n  \n  // When all questions have been asked\n  if (currentQuestion >= questions.length) {\n    return (\n      <div>\n        <h2>Want to save your result? We'll gladly email you</h2>\n        <form onSubmit={handleEmailSubmit}>\n          <label>\n            Email:\n            <input type=\"email\" value={email} onChange={handleEmailChange} />\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n\n  const { question, options } = questions[currentQuestion];\n\n  // Display questions\n  return (\n    <div>\n      <h2>{question}</h2>\n      <ul>\n        {options.map((option) => (\n          <li key={option}>\n            <button onClick={() => handleAnswer(option)}>{option}</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Test;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAG,CAChB;EACEC,QAAQ,EAAE,iGAAiG;EAC3GC,OAAO,EAAE,CAAC,cAAc,EAAE,iCAAiC,EAAE,iEAAiE,EAAE,0BAA0B;AAC5J,CAAC,EACD;EACED,QAAQ,EAAE,gEAAgE;EAC1EC,OAAO,EAAE,CAAC,uEAAuE,EAAE,aAAa,EAAE,sCAAsC,EAAE,0CAA0C;AACtL,CAAC,CACF;AAED,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAGtC,MAAMc,YAAY,GAAIC,MAAM,IAAK;IAC/BN,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;EACzC,CAAC;EAED,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC5BL,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;;EAED;EACA,IAAI,CAACD,QAAQ,EAAE;IACb,oBACER,OAAA;MAAAe,QAAA,eACEf,OAAA;QAAQgB,OAAO,EAAEF,eAAgB;QAAAC,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAEV;;EAEA;EACA,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAACf,KAAK,CAAC;EACpB,CAAC;EAED,MAAMgB,iBAAiB,GAAIJ,KAAK,IAAK;IACnCX,QAAQ,CAACW,KAAK,CAACK,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;;EAED;EACA,IAAItB,eAAe,IAAIL,SAAS,CAAC4B,MAAM,EAAE;IACvC,oBACE7B,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAI;MAAgD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzDpB,OAAA;QAAM8B,QAAQ,EAAET,iBAAkB;QAAAN,QAAA,gBAChCf,OAAA;UAAAe,QAAA,GAAO,QAEL,eAAAf,OAAA;YAAO+B,IAAI,EAAC,OAAO;YAACH,KAAK,EAAElB,KAAM;YAACsB,QAAQ,EAAEN;UAAkB;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC,eACRpB,OAAA;UAAQ+B,IAAI,EAAC,QAAQ;UAAAhB,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEV;EAEA,MAAM;IAAElB,QAAQ;IAAEC;EAAQ,CAAC,GAAGF,SAAS,CAACK,eAAe,CAAC;;EAExD;EACA,oBACEN,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAKb;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBpB,OAAA;MAAAe,QAAA,EACGZ,OAAO,CAAC8B,GAAG,CAAEC,MAAM,iBAClBlC,OAAA;QAAAe,QAAA,eACEf,OAAA;UAAQgB,OAAO,EAAEA,CAAA,KAAMJ,YAAY,CAACsB,MAAM,CAAE;UAAAnB,QAAA,EAAEmB;QAAM;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC,GADvDc,MAAM;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACf,EAAA,CAhEQD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAkEb,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}