{"ast":null,"code":"var _jsxFileName = \"/Users/krizchellewong/Desktop/3rdYear/Scire-Landing-Page/scire-tech/src/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: 'What is the capital of France?',\n  options: ['Paris', 'London', 'Berlin', 'Madrid'],\n  answer: 'Paris'\n}, {\n  question: 'What is the largest planet in our solar system?',\n  options: ['Jupiter', 'Saturn', 'Neptune', 'Uranus'],\n  answer: 'Jupiter'\n}, {\n  question: 'What is the highest mountain in the world?',\n  options: ['Mount Everest', 'K2', 'Kangchenjunga', 'Lhotse'],\n  answer: 'Mount Everest'\n}];\nfunction Quiz() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const handleAnswer = answer => {\n    if (answer === questions[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n    setCurrentQuestion(currentQuestion + 1);\n  };\n  if (currentQuestion >= questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Final Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n  const {\n    question,\n    options\n  } = questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(option),\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"T41DzXNL5iLXoze+eiFUml9SzVE=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","questions","question","options","answer","Quiz","_s","currentQuestion","setCurrentQuestion","score","setScore","handleAnswer","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","onClick","_c","$RefreshReg$"],"sources":["/Users/krizchellewong/Desktop/3rdYear/Scire-Landing-Page/scire-tech/src/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst questions = [\n  {\n    question: 'What is the capital of France?',\n    options: ['Paris', 'London', 'Berlin', 'Madrid'],\n    answer: 'Paris'\n  },\n  {\n    question: 'What is the largest planet in our solar system?',\n    options: ['Jupiter', 'Saturn', 'Neptune', 'Uranus'],\n    answer: 'Jupiter'\n  },\n  {\n    question: 'What is the highest mountain in the world?',\n    options: ['Mount Everest', 'K2', 'Kangchenjunga', 'Lhotse'],\n    answer: 'Mount Everest'\n  }\n];\n\nfunction Quiz() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n\n  const handleAnswer = (answer) => {\n    if (answer === questions[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n    setCurrentQuestion(currentQuestion + 1);\n  };\n\n  if (currentQuestion >= questions.length) {\n    return (\n      <div>\n        <h2>Final Score: {score}</h2>\n      </div>\n    );\n  }\n\n  const { question, options } = questions[currentQuestion];\n\n  return (\n    <div>\n      <h2>{question}</h2>\n      <ul>\n        {options.map((option) => (\n          <li key={option}>\n            <button onClick={() => handleAnswer(option)}>{option}</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Quiz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAG,CAChB;EACEC,QAAQ,EAAE,gCAAgC;EAC1CC,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;EAChDC,MAAM,EAAE;AACV,CAAC,EACD;EACEF,QAAQ,EAAE,iDAAiD;EAC3DC,OAAO,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC;EACnDC,MAAM,EAAE;AACV,CAAC,EACD;EACEF,QAAQ,EAAE,4CAA4C;EACtDC,OAAO,EAAE,CAAC,eAAe,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,CAAC;EAC3DC,MAAM,EAAE;AACV,CAAC,CACF;AAED,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMa,YAAY,GAAIP,MAAM,IAAK;IAC/B,IAAIA,MAAM,KAAKH,SAAS,CAACM,eAAe,CAAC,CAACH,MAAM,EAAE;MAChDM,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;IACAD,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;EACzC,CAAC;EAED,IAAIA,eAAe,IAAIN,SAAS,CAACW,MAAM,EAAE;IACvC,oBACEZ,OAAA;MAAAa,QAAA,eACEb,OAAA;QAAAa,QAAA,GAAI,eAAa,EAACJ,KAAK;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAEV;EAEA,MAAM;IAAEf,QAAQ;IAAEC;EAAQ,CAAC,GAAGF,SAAS,CAACM,eAAe,CAAC;EAExD,oBACEP,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAKX;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBjB,OAAA;MAAAa,QAAA,EACGV,OAAO,CAACe,GAAG,CAAEC,MAAM,iBAClBnB,OAAA;QAAAa,QAAA,eACEb,OAAA;UAAQoB,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACQ,MAAM,CAAE;UAAAN,QAAA,EAAEM;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC,GADvDE,MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACX,EAAA,CAjCQD,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AAmCb,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}